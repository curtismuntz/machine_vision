close all;
clear;
clc;

user=getenv('username')

if (ispc == 0)
	filepath = strcat('/home/',user,'/Dropbox//')
	image = strcat(filepath, 'Space_Shuttle_Columbia_launching.jpg')
else
	filepath='D:\home\Documents\git\machine_vision\hw3\'
    image = strcat(filepath, 'Space_Shuttle_Columbia_launching.jpg')
    convpath = 'D:\home\Documents\git\machine_vision\hw2\'
end

%---------------------------------------------%
% problem 1                                   %
%---------------------------------------------%

%--------%
% part 1 %
%--------%
% transform an image to gray level
I = imread(image);
I = rgb2gray(I);
figure('name', 'original image');
title('original image');
imshow(I);

%--------%
% part 2 %
%--------%
% add gaussian noise
noisy = imnoise(I, 'gaussian');
figure('name', 'noizy image');
title('noizy image');
imshow(noisy);

%--------%
% part 3 %
%--------%
% create 5x5 gauss mask
mask = fspecial('gaussian', [5 5], 0.5)

%--------%
% part 4 %
%--------%
% filter in space domain
cd ../hw2/
TMP = convolution(noisy, mask);
cd ../hw3/
figure('name', 'convolved (filtered) image');
title('convolved (filtered) image');
imshow(TMP);

%--------%
% part 5 %
%--------%
% fourier transform the image
cd ../hw2/
fftd = fft2(noisy);
figure('name', 'fouriered image');
title('fouriered image');
imshow(fftd);

%--------%
% part 6 %
%--------%
% filter in frequency domain
cd ../hw3/
Z = fspecial('gaussian', [600 712], 0.5);
%Z = fft2(Z);
filtered = fftd.*Z;


imageD = ifft2(filtered);
dmin = min(min(abs(filtered))); dmax = max(max(abs(filtered)));
imshow( ( ifftshift(filtered)), [dmin dmax]),
reversed= ifft2(filtered);
figure('name', 'freq filtered image');
title('freq filtered image');
imshow(reversed);